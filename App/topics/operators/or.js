// &&  запинается на лжи а || запинается на правде
// 1. Если первый аргумент истина, возвращаем его
// 2. Если первый аргумент ложь, возвращаем его. Второй аргумент даже не вычисляется
//  && запинается на лжи. Если первый аргумент ложь, он возвращается, и второй аргумент игнорируется.
//  || запинается на правде. Если первый аргумент истинный, он возвращается, и второй аргумент игнорируется.
//  Приоритет оператора && выше, чем ||.
//  Поэтому в выражениях вида a && b || c первым выполнится &&, а затем ||.
//  Если вам нужно изменить порядок выполнения, используйте скобки.
//  Вот пример, где скобки меняют порядок выполнения:
//  if ( (a && b) || c ) { }
//  В этом случае сначала выполнится a && b, а затем результат сравнения будет сравниваться с c.
//  Приоритет оператора && выше, чем ||.
//  Поэтому в выражениях вида a && b || c первым выполнится &&, а затем ||.

const hamburger = 0 ;
const franchise = 0;
const cola = 0;

if (hamburger  || cola || franchise ) {  //Если ничего не указывается в  hamburger === 3  то это значит  
// что хотя бы одна единица каждого есть  // Хоть что то. Если хотя бы одно условие верно, то выполнится этот код


    console.log('Если хотя бы одно условие верно, то выполнится этот код'); 
}
else {
    console.log('Если все условия ложны, то выполнится этот код');
}

